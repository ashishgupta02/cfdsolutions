<?xml version="1.0" encoding="UTF-8"?>
<configurationDescriptor version="90">
  <logicalFolder name="root" displayName="root" projectFiles="true" kind="ROOT">
    <logicalFolder name="HeaderFiles"
                   displayName="Header Files"
                   projectFiles="true">
      <itemPath>include/Complex.h</itemPath>
      <itemPath>include/LinearAlgebra.h</itemPath>
      <itemPath>include/MC.h</itemPath>
      <itemPath>include/MatrixBlock.h</itemPath>
      <itemPath>include/ParallelLinearAlgebra.h</itemPath>
      <itemPath>include/Point2D.h</itemPath>
      <itemPath>include/Point3D.h</itemPath>
      <itemPath>include/Vector2D.h</itemPath>
      <itemPath>include/Vector3D.h</itemPath>
    </logicalFolder>
    <logicalFolder name="ResourceFiles"
                   displayName="Resource Files"
                   projectFiles="true">
    </logicalFolder>
    <logicalFolder name="SourceFiles"
                   displayName="Source Files"
                   projectFiles="true">
      <itemPath>src/LinearAlgebra.c</itemPath>
      <itemPath>src/MC_Iterative_Jacobi.c</itemPath>
      <itemPath>src/ParallelLinearAlgebra.cpp</itemPath>
      <itemPath>src/Point2D.cpp</itemPath>
      <itemPath>src/Point3D.cpp</itemPath>
      <itemPath>src/Vector2D.cpp</itemPath>
      <itemPath>src/Vector3D.cpp</itemPath>
    </logicalFolder>
    <logicalFolder name="TestFiles"
                   displayName="Test Files"
                   projectFiles="false"
                   kind="TEST_LOGICAL_FOLDER">
    </logicalFolder>
    <logicalFolder name="ExternalFiles"
                   displayName="Important Files"
                   projectFiles="false"
                   kind="IMPORTANT_FILES_FOLDER">
      <itemPath>Makefile</itemPath>
    </logicalFolder>
  </logicalFolder>
  <projectmakefile>Makefile</projectmakefile>
  <confs>
    <conf name="Release" type="2">
      <toolsSet>
        <compilerSet>GNU|GNU</compilerSet>
        <dependencyChecking>true</dependencyChecking>
        <rebuildPropChanged>false</rebuildPropChanged>
      </toolsSet>
      <compileType>
        <cTool>
          <developmentMode>5</developmentMode>
          <incDir>
            <pElem>..</pElem>
            <pElem>../UTILS/include</pElem>
            <pElem>include</pElem>
          </incDir>
          <commandLine>-march=native -Wno-write-strings -fno-math-errno -fno-trapping-math -ffinite-math-only -fno-signaling-nans -fstrict-aliasing -fomit-frame-pointer -fexpensive-optimizations -funroll-all-loops -ffast-math -finline-limit=150000 -Winline -mfpmath=sse -msse2</commandLine>
          <warningLevel>2</warningLevel>
        </cTool>
        <ccTool>
          <developmentMode>5</developmentMode>
          <incDir>
            <pElem>..</pElem>
            <pElem>../UTILS/include</pElem>
            <pElem>include</pElem>
          </incDir>
          <commandLine>-march=native -Wno-write-strings -fno-math-errno -fno-trapping-math -ffinite-math-only -fno-signaling-nans -fstrict-aliasing -fomit-frame-pointer -fpermissive -fexpensive-optimizations -funroll-all-loops -ffast-math -finline-limit=150000 -Winline -mfpmath=sse -msse2</commandLine>
          <warningLevel>2</warningLevel>
        </ccTool>
        <fortranCompilerTool>
          <developmentMode>5</developmentMode>
          <commandLine>-march=native -fexpensive-optimizations -funroll-all-loops -ffast-math -finline-limit=150000 -Winline -mfpmath=sse -msse2 -fdefault-double-8 -fdefault-real-8 -I./include</commandLine>
          <warningLevel>2</warningLevel>
        </fortranCompilerTool>
        <asmTool>
          <developmentMode>5</developmentMode>
          <warningLevel>2</warningLevel>
        </asmTool>
        <linkerTool>
          <linkerLibItems>
            <linkerLibProjectItem>
              <makeArtifact PL="../UTILS"
                            CT="2"
                            CN="Release"
                            AC="false"
                            BL="true"
                            WD="../UTILS"
                            BC="${MAKE}  -f Makefile CONF=Release"
                            CC="${MAKE}  -f Makefile CONF=Release clean"
                            OP="${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/libUTILS.so">
              </makeArtifact>
            </linkerLibProjectItem>
          </linkerLibItems>
          <commandLine>-march=native</commandLine>
        </linkerTool>
      </compileType>
      <item path="include/Complex.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/LinearAlgebra.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/MC.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/MatrixBlock.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/ParallelLinearAlgebra.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Point2D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Point3D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Vector2D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Vector3D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="src/LinearAlgebra.c" ex="false" tool="0" flavor2="0">
      </item>
      <item path="src/MC_Iterative_Jacobi.c" ex="false" tool="0" flavor2="0">
      </item>
      <item path="src/ParallelLinearAlgebra.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Point2D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Point3D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Vector2D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Vector3D.cpp" ex="false" tool="1" flavor2="0">
      </item>
    </conf>
    <conf name="Debug" type="2">
      <toolsSet>
        <compilerSet>GNU|GNU</compilerSet>
        <dependencyChecking>true</dependencyChecking>
        <rebuildPropChanged>false</rebuildPropChanged>
      </toolsSet>
      <compileType>
        <cTool>
          <incDir>
            <pElem>..</pElem>
            <pElem>../UTILS/include</pElem>
            <pElem>include</pElem>
          </incDir>
          <commandLine>-march=native -Wno-write-strings -fno-math-errno -fno-trapping-math -ffinite-math-only -fno-signaling-nans -fstrict-aliasing -fomit-frame-pointer -fexpensive-optimizations -funroll-all-loops -ffast-math -finline-limit=150000 -Winline -mfpmath=sse -msse2</commandLine>
          <warningLevel>2</warningLevel>
        </cTool>
        <ccTool>
          <incDir>
            <pElem>..</pElem>
            <pElem>../UTILS/include</pElem>
            <pElem>include</pElem>
          </incDir>
          <commandLine>-march=native -Wno-write-strings -fno-math-errno -fno-trapping-math -ffinite-math-only -fno-signaling-nans -fstrict-aliasing -fomit-frame-pointer -fpermissive -fexpensive-optimizations -funroll-all-loops -ffast-math -finline-limit=150000 -Winline -mfpmath=sse -msse2</commandLine>
          <warningLevel>2</warningLevel>
        </ccTool>
        <fortranCompilerTool>
          <commandLine>-march=native -fexpensive-optimizations -funroll-all-loops -ffast-math -finline-limit=150000 -Winline -mfpmath=sse -msse2 -fdefault-double-8 -fdefault-real-8 -I./include</commandLine>
          <warningLevel>2</warningLevel>
        </fortranCompilerTool>
        <asmTool>
          <warningLevel>2</warningLevel>
        </asmTool>
        <linkerTool>
          <linkerLibItems>
            <linkerLibProjectItem>
              <makeArtifact PL="../UTILS"
                            CT="2"
                            CN="Debug"
                            AC="true"
                            BL="true"
                            WD="../UTILS"
                            BC="${MAKE}  -f Makefile CONF=Debug"
                            CC="${MAKE}  -f Makefile CONF=Debug clean"
                            OP="${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/libUTILS.so">
              </makeArtifact>
            </linkerLibProjectItem>
          </linkerLibItems>
          <commandLine>-march=native</commandLine>
        </linkerTool>
      </compileType>
      <item path="include/Complex.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/LinearAlgebra.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/MC.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/MatrixBlock.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/ParallelLinearAlgebra.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Point2D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Point3D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Vector2D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Vector3D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="src/LinearAlgebra.c" ex="false" tool="0" flavor2="0">
      </item>
      <item path="src/MC_Iterative_Jacobi.c" ex="false" tool="0" flavor2="0">
      </item>
      <item path="src/ParallelLinearAlgebra.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Point2D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Point3D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Vector2D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Vector3D.cpp" ex="false" tool="1" flavor2="0">
      </item>
    </conf>
    <conf name="Release_Intel" type="2">
      <toolsSet>
        <compilerSet>Intel|Intel</compilerSet>
        <dependencyChecking>true</dependencyChecking>
        <rebuildPropChanged>false</rebuildPropChanged>
      </toolsSet>
      <compileType>
        <cTool>
          <developmentMode>5</developmentMode>
          <commandlineTool>icc</commandlineTool>
          <incDir>
            <pElem>..</pElem>
            <pElem>../UTILS/include</pElem>
            <pElem>include</pElem>
          </incDir>
          <commandLine>-fast -Wno-write-strings -fno-math-errno -fstrict-aliasing -fomit-frame-pointer -funroll-all-loops -finline-limit=150000</commandLine>
          <warningLevel>2</warningLevel>
        </cTool>
        <ccTool>
          <developmentMode>5</developmentMode>
          <commandlineTool>icpc</commandlineTool>
          <incDir>
            <pElem>..</pElem>
            <pElem>../UTILS/include</pElem>
            <pElem>include</pElem>
          </incDir>
          <commandLine>-fast -Wno-write-strings -fno-math-errno -fstrict-aliasing -fomit-frame-pointer -fpermissive -funroll-all-loops -finline-limit=150000</commandLine>
          <warningLevel>2</warningLevel>
        </ccTool>
        <fortranCompilerTool>
          <developmentMode>5</developmentMode>
          <commandlineTool>ifort</commandlineTool>
          <commandLine>-fast</commandLine>
          <warningLevel>2</warningLevel>
        </fortranCompilerTool>
        <asmTool>
          <developmentMode>5</developmentMode>
          <warningLevel>2</warningLevel>
        </asmTool>
        <linkerTool>
          <commandlineTool>icpc</commandlineTool>
          <linkerLibItems>
            <linkerLibProjectItem>
              <makeArtifact PL="../UTILS"
                            CT="2"
                            CN="Release_Intel"
                            AC="false"
                            BL="true"
                            WD="../UTILS"
                            BC="${MAKE}  -f Makefile CONF=Release_Intel"
                            CC="${MAKE}  -f Makefile CONF=Release_Intel clean"
                            OP="${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/libUTILS.so">
              </makeArtifact>
            </linkerLibProjectItem>
          </linkerLibItems>
        </linkerTool>
      </compileType>
      <item path="include/Complex.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/LinearAlgebra.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/MC.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/MatrixBlock.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/ParallelLinearAlgebra.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Point2D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Point3D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Vector2D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Vector3D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="src/LinearAlgebra.c" ex="false" tool="0" flavor2="0">
      </item>
      <item path="src/MC_Iterative_Jacobi.c" ex="false" tool="0" flavor2="0">
      </item>
      <item path="src/ParallelLinearAlgebra.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Point2D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Point3D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Vector2D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Vector3D.cpp" ex="false" tool="1" flavor2="0">
      </item>
    </conf>
    <conf name="Debug_Intel" type="2">
      <toolsSet>
        <compilerSet>Intel|Intel</compilerSet>
        <dependencyChecking>true</dependencyChecking>
        <rebuildPropChanged>false</rebuildPropChanged>
      </toolsSet>
      <compileType>
        <cTool>
          <commandlineTool>icc</commandlineTool>
          <incDir>
            <pElem>..</pElem>
            <pElem>../UTILS/include</pElem>
            <pElem>include</pElem>
          </incDir>
          <commandLine>-fast -Wno-write-strings -fno-math-errno -fstrict-aliasing -fomit-frame-pointer -funroll-all-loops -finline-limit=150000</commandLine>
          <warningLevel>2</warningLevel>
        </cTool>
        <ccTool>
          <commandlineTool>icpc</commandlineTool>
          <incDir>
            <pElem>..</pElem>
            <pElem>../UTILS/include</pElem>
            <pElem>include</pElem>
          </incDir>
          <commandLine>-fast -Wno-write-strings -fno-math-errno -fstrict-aliasing -fomit-frame-pointer -fpermissive -funroll-all-loops -finline-limit=150000</commandLine>
          <warningLevel>2</warningLevel>
        </ccTool>
        <fortranCompilerTool>
          <commandlineTool>ifort</commandlineTool>
          <commandLine>-fast</commandLine>
          <warningLevel>2</warningLevel>
        </fortranCompilerTool>
        <asmTool>
          <warningLevel>2</warningLevel>
        </asmTool>
        <linkerTool>
          <commandlineTool>icpc</commandlineTool>
          <linkerLibItems>
            <linkerLibProjectItem>
              <makeArtifact PL="../UTILS"
                            CT="2"
                            CN="Debug_Intel"
                            AC="true"
                            BL="true"
                            WD="../UTILS"
                            BC="${MAKE}  -f Makefile CONF=Debug_Intel"
                            CC="${MAKE}  -f Makefile CONF=Debug_Intel clean"
                            OP="${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/libUTILS.so">
              </makeArtifact>
            </linkerLibProjectItem>
          </linkerLibItems>
        </linkerTool>
      </compileType>
      <item path="include/Complex.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/LinearAlgebra.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/MC.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/MatrixBlock.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/ParallelLinearAlgebra.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Point2D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Point3D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Vector2D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Vector3D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="src/LinearAlgebra.c" ex="false" tool="0" flavor2="0">
      </item>
      <item path="src/MC_Iterative_Jacobi.c" ex="false" tool="0" flavor2="0">
      </item>
      <item path="src/ParallelLinearAlgebra.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Point2D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Point3D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Vector2D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Vector3D.cpp" ex="false" tool="1" flavor2="0">
      </item>
    </conf>
    <conf name="Release_Intel_MPI" type="2">
      <toolsSet>
        <compilerSet>Intel|Intel</compilerSet>
        <dependencyChecking>true</dependencyChecking>
        <rebuildPropChanged>false</rebuildPropChanged>
      </toolsSet>
      <compileType>
        <cTool>
          <developmentMode>5</developmentMode>
          <commandlineTool>icc</commandlineTool>
          <incDir>
            <pElem>..</pElem>
            <pElem>../UTILS/include</pElem>
            <pElem>include</pElem>
            <pElem>/apps/HPC_LIBS/include</pElem>
          </incDir>
          <commandLine>-fast -Wno-write-strings -fno-math-errno -fstrict-aliasing -fomit-frame-pointer -funroll-all-loops -finline-limit=150000</commandLine>
          <preprocessorList>
            <Elem>HAVE_MPI</Elem>
          </preprocessorList>
          <warningLevel>2</warningLevel>
        </cTool>
        <ccTool>
          <developmentMode>5</developmentMode>
          <commandlineTool>icpc</commandlineTool>
          <incDir>
            <pElem>..</pElem>
            <pElem>../UTILS/include</pElem>
            <pElem>include</pElem>
            <pElem>/apps/HPC_LIBS/include</pElem>
          </incDir>
          <commandLine>-fast -Wno-write-strings -fno-math-errno -fstrict-aliasing -fomit-frame-pointer -fpermissive -funroll-all-loops -finline-limit=150000</commandLine>
          <preprocessorList>
            <Elem>HAVE_MPI</Elem>
          </preprocessorList>
          <warningLevel>2</warningLevel>
        </ccTool>
        <fortranCompilerTool>
          <developmentMode>5</developmentMode>
          <commandlineTool>ifort</commandlineTool>
          <commandLine>-fast</commandLine>
          <warningLevel>2</warningLevel>
        </fortranCompilerTool>
        <asmTool>
          <developmentMode>5</developmentMode>
          <warningLevel>2</warningLevel>
        </asmTool>
        <linkerTool>
          <linkerAddLib>
            <pElem>/apps/HPC_LIBS/lib</pElem>
          </linkerAddLib>
          <commandlineTool>icpc</commandlineTool>
          <linkerLibItems>
            <linkerLibProjectItem>
              <makeArtifact PL="../UTILS"
                            CT="2"
                            CN="Release_Intel_MPI"
                            AC="true"
                            BL="true"
                            WD="../UTILS"
                            BC="${MAKE}  -f Makefile CONF=Release_Intel_MPI"
                            CC="${MAKE}  -f Makefile CONF=Release_Intel_MPI clean"
                            OP="${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/libUTILS.${CND_DLIB_EXT}">
              </makeArtifact>
            </linkerLibProjectItem>
          </linkerLibItems>
          <commandLine>-lmpi</commandLine>
        </linkerTool>
      </compileType>
      <item path="include/Complex.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/LinearAlgebra.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/MC.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/MatrixBlock.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/ParallelLinearAlgebra.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Point2D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Point3D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Vector2D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Vector3D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="src/LinearAlgebra.c" ex="false" tool="0" flavor2="0">
      </item>
      <item path="src/MC_Iterative_Jacobi.c" ex="false" tool="0" flavor2="0">
      </item>
      <item path="src/ParallelLinearAlgebra.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Point2D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Point3D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Vector2D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Vector3D.cpp" ex="false" tool="1" flavor2="0">
      </item>
    </conf>
    <conf name="Debug_Intel_MPI" type="2">
      <toolsSet>
        <compilerSet>Intel|Intel</compilerSet>
        <dependencyChecking>true</dependencyChecking>
        <rebuildPropChanged>false</rebuildPropChanged>
      </toolsSet>
      <compileType>
        <cTool>
          <commandlineTool>icc</commandlineTool>
          <incDir>
            <pElem>..</pElem>
            <pElem>../UTILS/include</pElem>
            <pElem>include</pElem>
            <pElem>/apps/HPC_LIBS/include</pElem>
          </incDir>
          <commandLine>-fast -Wno-write-strings -fno-math-errno -fstrict-aliasing -fomit-frame-pointer -funroll-all-loops -finline-limit=150000</commandLine>
          <preprocessorList>
            <Elem>HAVE_MPI</Elem>
          </preprocessorList>
          <warningLevel>2</warningLevel>
        </cTool>
        <ccTool>
          <commandlineTool>icpc</commandlineTool>
          <incDir>
            <pElem>..</pElem>
            <pElem>../UTILS/include</pElem>
            <pElem>include</pElem>
            <pElem>/apps/HPC_LIBS/include</pElem>
          </incDir>
          <commandLine>-fast -Wno-write-strings -fno-math-errno -fstrict-aliasing -fomit-frame-pointer -fpermissive -funroll-all-loops -finline-limit=150000</commandLine>
          <preprocessorList>
            <Elem>HAVE_MPI</Elem>
          </preprocessorList>
          <warningLevel>2</warningLevel>
        </ccTool>
        <fortranCompilerTool>
          <commandlineTool>ifort</commandlineTool>
          <commandLine>-fast</commandLine>
          <warningLevel>2</warningLevel>
        </fortranCompilerTool>
        <asmTool>
          <warningLevel>2</warningLevel>
        </asmTool>
        <linkerTool>
          <linkerAddLib>
            <pElem>/apps/HPC_LIBS/lib</pElem>
          </linkerAddLib>
          <commandlineTool>icpc</commandlineTool>
          <linkerLibItems>
            <linkerLibProjectItem>
              <makeArtifact PL="../UTILS"
                            CT="2"
                            CN="Debug_Intel_MPI"
                            AC="false"
                            BL="true"
                            WD="../UTILS"
                            BC="${MAKE}  -f Makefile CONF=Debug_Intel_MPI"
                            CC="${MAKE}  -f Makefile CONF=Debug_Intel_MPI clean"
                            OP="${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/libUTILS.${CND_DLIB_EXT}">
              </makeArtifact>
            </linkerLibProjectItem>
          </linkerLibItems>
          <commandLine>-lmpi</commandLine>
        </linkerTool>
      </compileType>
      <item path="include/Complex.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/LinearAlgebra.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/MC.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/MatrixBlock.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/ParallelLinearAlgebra.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Point2D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Point3D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Vector2D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Vector3D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="src/LinearAlgebra.c" ex="false" tool="0" flavor2="0">
      </item>
      <item path="src/MC_Iterative_Jacobi.c" ex="false" tool="0" flavor2="0">
      </item>
      <item path="src/ParallelLinearAlgebra.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Point2D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Point3D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Vector2D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Vector3D.cpp" ex="false" tool="1" flavor2="0">
      </item>
    </conf>
    <conf name="Release_GUPC_x86_64" type="2">
      <toolsSet>
        <compilerSet>GUPC_x86_64|GNU</compilerSet>
        <dependencyChecking>true</dependencyChecking>
        <rebuildPropChanged>false</rebuildPropChanged>
      </toolsSet>
      <compileType>
        <cTool>
          <developmentMode>5</developmentMode>
          <incDir>
            <pElem>..</pElem>
            <pElem>../UTILS/include</pElem>
            <pElem>include</pElem>
          </incDir>
          <commandLine>-march=native -Wno-write-strings -fno-math-errno -fno-trapping-math -ffinite-math-only -fno-signaling-nans -fstrict-aliasing -fomit-frame-pointer -fexpensive-optimizations -funroll-all-loops -ffast-math -finline-limit=150000 -mfpmath=sse -msse2</commandLine>
          <warningLevel>2</warningLevel>
        </cTool>
        <ccTool>
          <developmentMode>5</developmentMode>
          <incDir>
            <pElem>..</pElem>
            <pElem>../UTILS/include</pElem>
            <pElem>include</pElem>
          </incDir>
          <commandLine>-march=native -Wno-write-strings -fno-math-errno -fno-trapping-math -ffinite-math-only -fno-signaling-nans -fstrict-aliasing -fomit-frame-pointer -fpermissive -fexpensive-optimizations -funroll-all-loops -ffast-math -finline-limit=150000 -mfpmath=sse -msse2</commandLine>
          <warningLevel>2</warningLevel>
        </ccTool>
        <fortranCompilerTool>
          <developmentMode>5</developmentMode>
          <commandLine>-march=native -fexpensive-optimizations -funroll-all-loops -ffast-math -finline-limit=150000 -Winline -mfpmath=sse -msse2 -fdefault-double-8 -fdefault-real-8 -I./include</commandLine>
          <warningLevel>2</warningLevel>
        </fortranCompilerTool>
        <asmTool>
          <developmentMode>5</developmentMode>
          <warningLevel>2</warningLevel>
        </asmTool>
        <linkerTool>
          <linkerLibItems>
            <linkerLibProjectItem>
              <makeArtifact PL="../../../../NetBeansProjects/CFDSolutions/Trunk/UTILS"
                            CT="2"
                            CN="Release_GUPC_x86_64"
                            AC="false"
                            BL="true"
                            WD="../../../../NetBeansProjects/CFDSolutions/Trunk/UTILS"
                            BC="${MAKE}  -f Makefile CONF=Release_GUPC_x86_64"
                            CC="${MAKE}  -f Makefile CONF=Release_GUPC_x86_64 clean"
                            OP="${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/libUTILS.so">
              </makeArtifact>
            </linkerLibProjectItem>
          </linkerLibItems>
          <commandLine>-march=native</commandLine>
        </linkerTool>
      </compileType>
      <item path="include/Complex.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/LinearAlgebra.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/MC.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/MatrixBlock.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/ParallelLinearAlgebra.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Point2D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Point3D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Vector2D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Vector3D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="src/LinearAlgebra.c" ex="false" tool="0" flavor2="0">
      </item>
      <item path="src/MC_Iterative_Jacobi.c" ex="false" tool="0" flavor2="0">
      </item>
      <item path="src/ParallelLinearAlgebra.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Point2D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Point3D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Vector2D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Vector3D.cpp" ex="false" tool="1" flavor2="0">
      </item>
    </conf>
    <conf name="Debug_GUPC_x86_64" type="2">
      <toolsSet>
        <compilerSet>GUPC_x86_64|GNU</compilerSet>
        <dependencyChecking>true</dependencyChecking>
        <rebuildPropChanged>false</rebuildPropChanged>
      </toolsSet>
      <compileType>
        <cTool>
          <incDir>
            <pElem>..</pElem>
            <pElem>../UTILS/include</pElem>
            <pElem>include</pElem>
          </incDir>
          <commandLine>-march=native -Wno-write-strings -fno-math-errno -fno-trapping-math -ffinite-math-only -fno-signaling-nans -fstrict-aliasing -fomit-frame-pointer -fexpensive-optimizations -funroll-all-loops -ffast-math -finline-limit=150000 -mfpmath=sse -msse2</commandLine>
          <warningLevel>2</warningLevel>
        </cTool>
        <ccTool>
          <incDir>
            <pElem>..</pElem>
            <pElem>../UTILS/include</pElem>
            <pElem>include</pElem>
          </incDir>
          <commandLine>-march=native -Wno-write-strings -fno-math-errno -fno-trapping-math -ffinite-math-only -fno-signaling-nans -fstrict-aliasing -fomit-frame-pointer -fpermissive -fexpensive-optimizations -funroll-all-loops -ffast-math -finline-limit=150000 -mfpmath=sse -msse2</commandLine>
          <warningLevel>2</warningLevel>
        </ccTool>
        <fortranCompilerTool>
          <commandLine>-march=native -fexpensive-optimizations -funroll-all-loops -ffast-math -finline-limit=150000 -Winline -mfpmath=sse -msse2 -fdefault-double-8 -fdefault-real-8 -I./include</commandLine>
          <warningLevel>2</warningLevel>
        </fortranCompilerTool>
        <asmTool>
          <warningLevel>2</warningLevel>
        </asmTool>
        <linkerTool>
          <linkerLibItems>
            <linkerLibProjectItem>
              <makeArtifact PL="../../../../NetBeansProjects/CFDSolutions/Trunk/UTILS"
                            CT="2"
                            CN="Debug_GUPC_x86_64"
                            AC="false"
                            BL="true"
                            WD="../../../../NetBeansProjects/CFDSolutions/Trunk/UTILS"
                            BC="${MAKE}  -f Makefile CONF=Debug_GUPC_x86_64"
                            CC="${MAKE}  -f Makefile CONF=Debug_GUPC_x86_64 clean"
                            OP="${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/libUTILS.so">
              </makeArtifact>
            </linkerLibProjectItem>
          </linkerLibItems>
          <commandLine>-march=native</commandLine>
        </linkerTool>
      </compileType>
      <item path="include/Complex.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/LinearAlgebra.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/MC.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/MatrixBlock.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/ParallelLinearAlgebra.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Point2D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Point3D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Vector2D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Vector3D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="src/LinearAlgebra.c" ex="false" tool="0" flavor2="0">
      </item>
      <item path="src/MC_Iterative_Jacobi.c" ex="false" tool="0" flavor2="0">
      </item>
      <item path="src/ParallelLinearAlgebra.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Point2D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Point3D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Vector2D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Vector3D.cpp" ex="false" tool="1" flavor2="0">
      </item>
    </conf>
    <conf name="Release_GUPC_ppc64" type="2">
      <toolsSet>
        <compilerSet>GUPC_ppc64|GNU</compilerSet>
        <dependencyChecking>true</dependencyChecking>
        <rebuildPropChanged>false</rebuildPropChanged>
      </toolsSet>
      <compileType>
        <cTool>
          <developmentMode>5</developmentMode>
          <incDir>
            <pElem>..</pElem>
            <pElem>../UTILS/include</pElem>
            <pElem>include</pElem>
          </incDir>
          <commandLine>-mcpu=powerpc64 -Wno-write-strings -fno-math-errno -fno-trapping-math -ffinite-math-only -fno-signaling-nans -fstrict-aliasing -fomit-frame-pointer -fexpensive-optimizations -funroll-all-loops -ffast-math -finline-limit=150000</commandLine>
          <warningLevel>2</warningLevel>
        </cTool>
        <ccTool>
          <developmentMode>5</developmentMode>
          <incDir>
            <pElem>..</pElem>
            <pElem>../UTILS/include</pElem>
            <pElem>include</pElem>
          </incDir>
          <commandLine>-mcpu=powerpc64 -Wno-write-strings -fno-math-errno -fno-trapping-math -ffinite-math-only -fno-signaling-nans -fstrict-aliasing -fomit-frame-pointer -fpermissive -fexpensive-optimizations -funroll-all-loops -ffast-math -finline-limit=150000</commandLine>
          <warningLevel>2</warningLevel>
        </ccTool>
        <fortranCompilerTool>
          <developmentMode>5</developmentMode>
          <commandLine>-mcpu=powerpc64 -fexpensive-optimizations -funroll-all-loops -ffast-math -finline-limit=150000 -fdefault-double-8 -fdefault-real-8 -I./include</commandLine>
          <warningLevel>2</warningLevel>
        </fortranCompilerTool>
        <asmTool>
          <developmentMode>5</developmentMode>
          <warningLevel>2</warningLevel>
          <commandLine>-march=native -fexpensive-optimizations -funroll-all-loops -ffast-math -finline-limit=150000 -Winline -mfpmath=sse -msse2 -fdefault-double-8 -fdefault-real-8 -I./include</commandLine>
        </asmTool>
        <linkerTool>
          <linkerLibItems>
            <linkerLibProjectItem>
              <makeArtifact PL="../UTILS"
                            CT="2"
                            CN="Release_GUPC_ppc64"
                            AC="false"
                            BL="true"
                            WD="../UTILS"
                            BC="${MAKE}  -f Makefile CONF=Release_GUPC_ppc64"
                            CC="${MAKE}  -f Makefile CONF=Release_GUPC_ppc64 clean"
                            OP="${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/libUTILS.so">
              </makeArtifact>
            </linkerLibProjectItem>
          </linkerLibItems>
          <commandLine>-mcpu=powerpc64</commandLine>
        </linkerTool>
      </compileType>
      <item path="include/Complex.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/LinearAlgebra.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/MC.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/MatrixBlock.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/ParallelLinearAlgebra.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Point2D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Point3D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Vector2D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Vector3D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="src/LinearAlgebra.c" ex="false" tool="0" flavor2="0">
      </item>
      <item path="src/MC_Iterative_Jacobi.c" ex="false" tool="0" flavor2="0">
      </item>
      <item path="src/ParallelLinearAlgebra.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Point2D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Point3D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Vector2D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Vector3D.cpp" ex="false" tool="1" flavor2="0">
      </item>
    </conf>
    <conf name="Debug_GUPC_ppc64" type="2">
      <toolsSet>
        <compilerSet>GUPC_ppc64|GNU</compilerSet>
        <dependencyChecking>true</dependencyChecking>
        <rebuildPropChanged>false</rebuildPropChanged>
      </toolsSet>
      <compileType>
        <cTool>
          <incDir>
            <pElem>..</pElem>
            <pElem>../UTILS/include</pElem>
            <pElem>include</pElem>
          </incDir>
          <commandLine>-mcpu=powerpc64 -Wno-write-strings -fno-math-errno -fno-trapping-math -ffinite-math-only -fno-signaling-nans -fstrict-aliasing -fomit-frame-pointer -fexpensive-optimizations -funroll-all-loops -ffast-math -finline-limit=150000</commandLine>
          <warningLevel>2</warningLevel>
        </cTool>
        <ccTool>
          <incDir>
            <pElem>..</pElem>
            <pElem>../UTILS/include</pElem>
            <pElem>include</pElem>
          </incDir>
          <commandLine>-mcpu=powerpc64 -Wno-write-strings -fno-math-errno -fno-trapping-math -ffinite-math-only -fno-signaling-nans -fstrict-aliasing -fomit-frame-pointer -fpermissive -fexpensive-optimizations -funroll-all-loops -ffast-math -finline-limit=150000</commandLine>
          <warningLevel>2</warningLevel>
        </ccTool>
        <fortranCompilerTool>
          <commandLine>-mcpu=powerpc64 -fexpensive-optimizations -funroll-all-loops -ffast-math -finline-limit=150000 -fdefault-double-8 -fdefault-real-8 -I./include</commandLine>
          <warningLevel>2</warningLevel>
        </fortranCompilerTool>
        <asmTool>
          <warningLevel>2</warningLevel>
        </asmTool>
        <linkerTool>
          <linkerLibItems>
            <linkerLibProjectItem>
              <makeArtifact PL="../UTILS"
                            CT="2"
                            CN="Debug_GUPC_ppc64"
                            AC="false"
                            BL="true"
                            WD="../UTILS"
                            BC="${MAKE}  -f Makefile CONF=Debug_GUPC_ppc64"
                            CC="${MAKE}  -f Makefile CONF=Debug_GUPC_ppc64 clean"
                            OP="${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/libUTILS.so">
              </makeArtifact>
            </linkerLibProjectItem>
          </linkerLibItems>
          <commandLine>-mcpu=powerpc64</commandLine>
        </linkerTool>
      </compileType>
      <item path="include/Complex.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/LinearAlgebra.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/MC.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/MatrixBlock.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/ParallelLinearAlgebra.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Point2D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Point3D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Vector2D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Vector3D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="src/LinearAlgebra.c" ex="false" tool="0" flavor2="0">
      </item>
      <item path="src/MC_Iterative_Jacobi.c" ex="false" tool="0" flavor2="0">
      </item>
      <item path="src/ParallelLinearAlgebra.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Point2D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Point3D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Vector2D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Vector3D.cpp" ex="false" tool="1" flavor2="0">
      </item>
    </conf>
    <conf name="Release_Cygwin" type="2">
      <toolsSet>
        <compilerSet>Cygwin_4.x|Cygwin_4.x</compilerSet>
        <dependencyChecking>true</dependencyChecking>
        <rebuildPropChanged>false</rebuildPropChanged>
      </toolsSet>
      <compileType>
        <cTool>
          <developmentMode>5</developmentMode>
          <incDir>
            <pElem>..</pElem>
            <pElem>../UTILS/include</pElem>
            <pElem>include</pElem>
          </incDir>
          <commandLine>-march=native -Wno-write-strings -fno-math-errno -fno-trapping-math -ffinite-math-only -fno-signaling-nans -fstrict-aliasing -fomit-frame-pointer -fexpensive-optimizations -funroll-all-loops -ffast-math -finline-limit=150000 -Winline -mfpmath=sse -msse2</commandLine>
          <warningLevel>2</warningLevel>
        </cTool>
        <ccTool>
          <developmentMode>5</developmentMode>
          <incDir>
            <pElem>..</pElem>
            <pElem>../UTILS/include</pElem>
            <pElem>include</pElem>
          </incDir>
          <commandLine>-march=native -Wno-write-strings -fno-math-errno -fno-trapping-math -ffinite-math-only -fno-signaling-nans -fstrict-aliasing -fomit-frame-pointer -fpermissive -fexpensive-optimizations -funroll-all-loops -ffast-math -finline-limit=150000 -Winline -mfpmath=sse -msse2</commandLine>
          <warningLevel>2</warningLevel>
        </ccTool>
        <fortranCompilerTool>
          <developmentMode>5</developmentMode>
          <commandLine>-march=native -fexpensive-optimizations -funroll-all-loops -ffast-math -finline-limit=150000 -Winline -mfpmath=sse -msse2 -fdefault-double-8 -fdefault-real-8 -I./include</commandLine>
          <warningLevel>2</warningLevel>
        </fortranCompilerTool>
        <asmTool>
          <developmentMode>5</developmentMode>
          <warningLevel>2</warningLevel>
        </asmTool>
        <linkerTool>
          <linkerLibItems>
            <linkerLibProjectItem>
              <makeArtifact PL="../UTILS"
                            CT="2"
                            CN="Release_Cygwin"
                            AC="true"
                            BL="true"
                            WD="../UTILS"
                            BC="${MAKE}  -f Makefile CONF=Release_Cygwin"
                            CC="${MAKE}  -f Makefile CONF=Release_Cygwin clean"
                            OP="${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/libUTILS.${CND_DLIB_EXT}">
              </makeArtifact>
            </linkerLibProjectItem>
          </linkerLibItems>
          <commandLine>-march=native</commandLine>
        </linkerTool>
      </compileType>
      <item path="include/Complex.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/LinearAlgebra.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/MC.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/MatrixBlock.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/ParallelLinearAlgebra.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Point2D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Point3D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Vector2D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Vector3D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="src/LinearAlgebra.c" ex="false" tool="0" flavor2="0">
      </item>
      <item path="src/MC_Iterative_Jacobi.c" ex="false" tool="0" flavor2="0">
      </item>
      <item path="src/ParallelLinearAlgebra.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Point2D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Point3D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Vector2D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Vector3D.cpp" ex="false" tool="1" flavor2="0">
      </item>
    </conf>
    <conf name="Debug_Cygwin" type="2">
      <toolsSet>
        <compilerSet>Cygwin_4.x|Cygwin_4.x</compilerSet>
        <dependencyChecking>true</dependencyChecking>
        <rebuildPropChanged>false</rebuildPropChanged>
      </toolsSet>
      <compileType>
        <cTool>
          <incDir>
            <pElem>..</pElem>
            <pElem>../UTILS/include</pElem>
            <pElem>include</pElem>
          </incDir>
          <commandLine>-march=native -Wno-write-strings -fno-math-errno -fno-trapping-math -ffinite-math-only -fno-signaling-nans -fstrict-aliasing -fomit-frame-pointer -fexpensive-optimizations -funroll-all-loops -ffast-math -finline-limit=150000 -Winline -mfpmath=sse -msse2</commandLine>
          <warningLevel>2</warningLevel>
        </cTool>
        <ccTool>
          <incDir>
            <pElem>..</pElem>
            <pElem>../UTILS/include</pElem>
            <pElem>include</pElem>
          </incDir>
          <commandLine>-march=native -Wno-write-strings -fno-math-errno -fno-trapping-math -ffinite-math-only -fno-signaling-nans -fstrict-aliasing -fomit-frame-pointer -fpermissive -fexpensive-optimizations -funroll-all-loops -ffast-math -finline-limit=150000 -Winline -mfpmath=sse -msse2</commandLine>
          <warningLevel>2</warningLevel>
        </ccTool>
        <fortranCompilerTool>
          <commandLine>-march=native -fexpensive-optimizations -funroll-all-loops -ffast-math -finline-limit=150000 -Winline -mfpmath=sse -msse2 -fdefault-double-8 -fdefault-real-8 -I./include</commandLine>
          <warningLevel>2</warningLevel>
        </fortranCompilerTool>
        <asmTool>
          <warningLevel>2</warningLevel>
        </asmTool>
        <linkerTool>
          <linkerLibItems>
            <linkerLibProjectItem>
              <makeArtifact PL="../UTILS"
                            CT="2"
                            CN="Debug_Cygwin"
                            AC="false"
                            BL="true"
                            WD="../UTILS"
                            BC="${MAKE}  -f Makefile CONF=Debug_Cygwin"
                            CC="${MAKE}  -f Makefile CONF=Debug_Cygwin clean"
                            OP="${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/libUTILS.${CND_DLIB_EXT}">
              </makeArtifact>
            </linkerLibProjectItem>
          </linkerLibItems>
          <commandLine>-march=native</commandLine>
        </linkerTool>
      </compileType>
      <item path="include/Complex.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/LinearAlgebra.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/MC.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/MatrixBlock.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/ParallelLinearAlgebra.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Point2D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Point3D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Vector2D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Vector3D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="src/LinearAlgebra.c" ex="false" tool="0" flavor2="0">
      </item>
      <item path="src/MC_Iterative_Jacobi.c" ex="false" tool="0" flavor2="0">
      </item>
      <item path="src/ParallelLinearAlgebra.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Point2D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Point3D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Vector2D.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/Vector3D.cpp" ex="false" tool="1" flavor2="0">
      </item>
    </conf>
    <conf name="Release_MinGW" type="2">
      <toolsSet>
        <compilerSet>MinGW|MinGW</compilerSet>
        <dependencyChecking>true</dependencyChecking>
        <rebuildPropChanged>false</rebuildPropChanged>
      </toolsSet>
      <compileType>
        <cTool>
          <developmentMode>5</developmentMode>
          <incDir>
            <pElem>..</pElem>
            <pElem>../UTILS/include</pElem>
            <pElem>include</pElem>
          </incDir>
          <commandLine>-march=native -Wno-write-strings -fno-math-errno -fno-trapping-math -ffinite-math-only -fno-signaling-nans -fstrict-aliasing -fomit-frame-pointer -fexpensive-optimizations -funroll-all-loops -ffast-math -finline-limit=150000 -Winline -mfpmath=sse -msse2</commandLine>
          <warningLevel>2</warningLevel>
        </cTool>
        <ccTool>
          <developmentMode>5</developmentMode>
          <incDir>
            <pElem>..</pElem>
            <pElem>../UTILS/include</pElem>
            <pElem>include</pElem>
          </incDir>
          <commandLine>-march=native -Wno-write-strings -fno-math-errno -fno-trapping-math -ffinite-math-only -fno-signaling-nans -fstrict-aliasing -fomit-frame-pointer -fpermissive -fexpensive-optimizations -funroll-all-loops -ffast-math -finline-limit=150000 -Winline -mfpmath=sse -msse2</commandLine>
          <warningLevel>2</warningLevel>
        </ccTool>
        <fortranCompilerTool>
          <developmentMode>5</developmentMode>
          <commandLine>-march=native -fexpensive-optimizations -funroll-all-loops -ffast-math -finline-limit=150000 -Winline -mfpmath=sse -msse2 -fdefault-double-8 -fdefault-real-8 -I./include</commandLine>
          <warningLevel>2</warningLevel>
        </fortranCompilerTool>
        <asmTool>
          <developmentMode>5</developmentMode>
          <warningLevel>2</warningLevel>
        </asmTool>
        <linkerTool>
          <linkerLibItems>
            <linkerLibProjectItem>
              <makeArtifact PL="../UTILS"
                            CT="2"
                            CN="Release_MinGW"
                            AC="true"
                            BL="true"
                            WD="../UTILS"
                            BC="${MAKE}  -f Makefile CONF=Release_MinGW"
                            CC="${MAKE}  -f Makefile CONF=Release_MinGW clean"
                            OP="${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/libUTILS.${CND_DLIB_EXT}">
              </makeArtifact>
            </linkerLibProjectItem>
          </linkerLibItems>
          <commandLine>-march=native</commandLine>
        </linkerTool>
      </compileType>
      <item path="include/Complex.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/LinearAlgebra.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/MC.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/MatrixBlock.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/ParallelLinearAlgebra.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Point2D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Point3D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Vector2D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Vector3D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="src/LinearAlgebra.c" ex="false" tool="0" flavor2="9">
      </item>
      <item path="src/MC_Iterative_Jacobi.c" ex="false" tool="0" flavor2="9">
      </item>
      <item path="src/ParallelLinearAlgebra.cpp" ex="false" tool="1" flavor2="9">
      </item>
      <item path="src/Point2D.cpp" ex="false" tool="1" flavor2="9">
      </item>
      <item path="src/Point3D.cpp" ex="false" tool="1" flavor2="9">
      </item>
      <item path="src/Vector2D.cpp" ex="false" tool="1" flavor2="9">
      </item>
      <item path="src/Vector3D.cpp" ex="false" tool="1" flavor2="9">
      </item>
    </conf>
    <conf name="Debug_MinGW" type="2">
      <toolsSet>
        <compilerSet>MinGW|MinGW</compilerSet>
        <dependencyChecking>true</dependencyChecking>
        <rebuildPropChanged>false</rebuildPropChanged>
      </toolsSet>
      <compileType>
        <cTool>
          <incDir>
            <pElem>..</pElem>
            <pElem>../UTILS/include</pElem>
            <pElem>include</pElem>
          </incDir>
          <commandLine>-march=native -Wno-write-strings -fno-math-errno -fno-trapping-math -ffinite-math-only -fno-signaling-nans -fstrict-aliasing -fomit-frame-pointer -fexpensive-optimizations -funroll-all-loops -ffast-math -finline-limit=150000 -Winline -mfpmath=sse -msse2</commandLine>
          <warningLevel>2</warningLevel>
        </cTool>
        <ccTool>
          <incDir>
            <pElem>..</pElem>
            <pElem>../UTILS/include</pElem>
            <pElem>include</pElem>
          </incDir>
          <commandLine>-march=native -Wno-write-strings -fno-math-errno -fno-trapping-math -ffinite-math-only -fno-signaling-nans -fstrict-aliasing -fomit-frame-pointer -fpermissive -fexpensive-optimizations -funroll-all-loops -ffast-math -finline-limit=150000 -Winline -mfpmath=sse -msse2</commandLine>
          <warningLevel>2</warningLevel>
        </ccTool>
        <fortranCompilerTool>
          <commandLine>-march=native -fexpensive-optimizations -funroll-all-loops -ffast-math -finline-limit=150000 -Winline -mfpmath=sse -msse2 -fdefault-double-8 -fdefault-real-8 -I./include</commandLine>
          <warningLevel>2</warningLevel>
        </fortranCompilerTool>
        <asmTool>
          <warningLevel>2</warningLevel>
        </asmTool>
        <linkerTool>
          <linkerLibItems>
            <linkerLibProjectItem>
              <makeArtifact PL="../UTILS"
                            CT="2"
                            CN="Debug_MinGW"
                            AC="false"
                            BL="true"
                            WD="../UTILS"
                            BC="${MAKE}  -f Makefile CONF=Debug_MinGW"
                            CC="${MAKE}  -f Makefile CONF=Debug_MinGW clean"
                            OP="${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/libUTILS.${CND_DLIB_EXT}">
              </makeArtifact>
            </linkerLibProjectItem>
          </linkerLibItems>
          <commandLine>-march=native</commandLine>
        </linkerTool>
      </compileType>
      <item path="include/Complex.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/LinearAlgebra.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/MC.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/MatrixBlock.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/ParallelLinearAlgebra.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Point2D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Point3D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Vector2D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Vector3D.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="src/LinearAlgebra.c" ex="false" tool="0" flavor2="9">
      </item>
      <item path="src/MC_Iterative_Jacobi.c" ex="false" tool="0" flavor2="9">
      </item>
      <item path="src/ParallelLinearAlgebra.cpp" ex="false" tool="1" flavor2="9">
      </item>
      <item path="src/Point2D.cpp" ex="false" tool="1" flavor2="9">
      </item>
      <item path="src/Point3D.cpp" ex="false" tool="1" flavor2="9">
      </item>
      <item path="src/Vector2D.cpp" ex="false" tool="1" flavor2="9">
      </item>
      <item path="src/Vector3D.cpp" ex="false" tool="1" flavor2="9">
      </item>
    </conf>
  </confs>
</configurationDescriptor>
